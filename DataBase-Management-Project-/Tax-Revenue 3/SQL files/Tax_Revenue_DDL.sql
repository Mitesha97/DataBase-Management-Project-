DROP DATABASE Tax_revenue
create database Tax_revenue;
use Tax_revenue;


CREATE TABLE REGISTRATION (
USERID VARCHAR(25) NOT NULL UNIQUE,
PASSWD VARCHAR(32) NOT NULL ,
EMAIL VARCHAR(25) NOT NULL,
TAX_PAYER_TYPE VARCHAR(25) NOT NULL
CONSTRAINT REG_PK PRIMARY KEY(USERID)
)

CREATE TABLE CITIZEN (
    SSN CHAR(9) NOT NULL UNIQUE,
    USERID VARCHAR(25) NOT NULL,
    FNAME VARCHAR(25) NOT NULL,
    LNAME VARCHAR(25) NOT NULL,
    DOB DATE NOT NULL,
    PHONE CHAR(10),
    C_STREET VARCHAR(50),
    C_CITY VARCHAR(50),
    C_STATE CHAR(2),
    C_ZIP VARCHAR(10) NOT NULL,
    SALARY INT NOT NULL,
    EXTRA_FUNDS INT NOT NULL
    CONSTRAINT CITIZEN_PK PRIMARY KEY(SSN)
    CONSTRAINT CITIZEN_FK FOREIGN KEY(USERID) REFERENCES REGISTRATION(USERID)


)

CREATE TABLE CORPORATE (
    EIN CHAR(9) NOT NULL UNIQUE,
    USERID VARCHAR(25) NOT NULL,
    LEGAL_NAME VARCHAR(25) NOT NULL,
    REG_DATE DATE NOT NULL, 
    PHONE CHAR(10),
    E_STREET VARCHAR(50),
    E_CITY VARCHAR(50),
    E_STATE CHAR(2),
    E_ZIP VARCHAR(10) NOT NULL,
    OWNERSHIP_TYPE VARCHAR(50) NOT NULL,
    ASSETS INT NOT NULL,
    TURNOVER INT NOT NULL
    CONSTRAINT CORPORATE_PK PRIMARY KEY(EIN)
    CONSTRAINT CORPORATE_FK FOREIGN KEY(USERID) REFERENCES REGISTRATION(USERID)


)

CREATE TABLE TAX (
    TAX_CODE CHAR(9) NOT NULL,
    USERID VARCHAR(25),
    SSN CHAR(9),
    EIN CHAR(9),
    PAYER_ENTITY VARCHAR(25) NOT NULL,
    TAX_CATEGORY VARCHAR(25) NOT NULL,
    TAX_DESC VARCHAR(100) NOT NULL
    CONSTRAINT TAXCODE_PK PRIMARY KEY(TAX_CODE)
    CONSTRAINT TAXCODE_FK FOREIGN KEY(USERID) REFERENCES REGISTRATION(USERID)
    
)

CREATE TABLE PAYMENT (
    PAY_ID INT IDENTITY(1,1) ,
    TAX_CODE CHAR(9) NOT NULL,
    PAY_AMT INT NOT NULL,
    PAY_DATE DATE NOT NULL,
    PAY_MODE VARCHAR(20) NOT NULL
    CONSTRAINT PAYMENT_PK PRIMARY KEY(PAY_ID)
    CONSTRAINT PAYMENT_FK FOREIGN KEY(TAX_CODE) REFERENCES TAX(TAX_CODE) ON UPDATE CASCADE,
)



CREATE TABLE TAX_LEVEL (
    TAX_LEVEL CHAR(1) NOT NULL,
    GOVT_TYPE VARCHAR(10) NOT NULL,
    CONSTRAINT TAXLEVEL_PK PRIMARY KEY(TAX_LEVEL)

)

CREATE TABLE GOVERNMENT (
    STATE_ID CHAR(2) NOT NULL,
    TAX_CODE CHAR(9) NOT NULL,
    TAX_LEVEL CHAR(1) NOT NULL CONSTRAINT  GOVT_TYPE1 CHECK ( TAX_LEVEL IN ('S','F') )
    CONSTRAINT GOVERNMENT_PK PRIMARY KEY(TAX_CODE)
    CONSTRAINT GOVERNMENT_FK1 FOREIGN KEY(TAX_CODE) REFERENCES TAX(TAX_CODE),
    CONSTRAINT GOVERNMENT_FK2 FOREIGN KEY(TAX_LEVEL) REFERENCES TAX_LEVEL(TAX_LEVEL)
)



CREATE TABLE EXPENDITURE (
    EXP_ID VARCHAR(9) NOT NULL,
    EXP_TYPE VARCHAR(80) NOT NULL,
    STATE_ID CHAR(2) NOT NULL,
    TAX_CODE CHAR(9) NOT NULL
    CONSTRAINT EXPENDITURE_PK PRIMARY KEY(EXP_ID)
    CONSTRAINT EXPENDITURE_FK FOREIGN KEY(TAX_CODE) REFERENCES GOVERNMENT(TAX_CODE)

)

CREATE TABLE HEALTH (
    EXP_ID VARCHAR(9) NOT NULL,
    H_AMT INTEGER NOT NULL,
    H_CAUSE VARCHAR(100) NOT NULL,
    H_DATE DATE NOT NULL

    CONSTRAINT HEALTH_PK PRIMARY KEY(EXP_ID)
    CONSTRAINT HEALTH_FK FOREIGN KEY(EXP_ID) REFERENCES EXPENDITURE(EXP_ID)
)

CREATE TABLE COMMUNITY (
    EXP_ID VARCHAR(9) NOT NULL,
    C_AMT INT NOT NULL,
    C_TYPE VARCHAR(50) NOT NULL,
    C_DESC VARCHAR(100) NOT NULL,
    C_DATE DATE NOT NULL
    
    CONSTRAINT COMMUNITY_PK PRIMARY KEY(EXP_ID)
    CONSTRAINT COMMUNITY_FK FOREIGN KEY(EXP_ID) REFERENCES EXPENDITURE(EXP_ID)
)

CREATE TABLE ROADS_TRANSPORT (
    EXP_ID VARCHAR(9) NOT NULL,
    RT_AMT INT NOT NULL,
    RT_DESC VARCHAR(100) NOT NULL,
    RT_DATE DATE NOT NULL
    
    CONSTRAINT ROADSTRANSPORT_PK PRIMARY KEY(EXP_ID)
    CONSTRAINT ROADSTRANSPORT_FK FOREIGN KEY(EXP_ID) REFERENCES EXPENDITURE(EXP_ID)
)


 

CREATE TABLE DEDUCTION (
    RID VARCHAR(9) NOT NULL,
    EXP_ID VARCHAR(9) NOT NULL,
    USERID VARCHAR(25) NOT NULL UNIQUE,
    SSN CHAR(9),
    EIN CHAR(9),
    R_AMT INT ,
    R_DATE DATE NOT NULL,
    R_TYPE VARCHAR(20),
    R_NOEMPLOYMENT_AMT INT 
    CONSTRAINT DEDUCTION_PK PRIMARY KEY(RID)
    CONSTRAINT DEDUCTION_FK1 FOREIGN KEY(USERID) REFERENCES REGISTRATION(USERID),
    CONSTRAINT DEDUCTION_FK2 FOREIGN KEY(EXP_ID) REFERENCES EXPENDITURE(EXP_ID)
)

-- COMPUTED COLUMN BASED ON FUNCTION

CREATE FUNCTION dbo.TotalSalary(
@Salary INT, @ExtraFunds INT)
RETURNS INT
AS
BEGIN 
RETURN @Salary  + @ExtraFunds 
END ;

ALTER TABLE CORPORATE ADD CAPITAL AS dbo.TotalSalary(ASSETS,TURNOVER);
ALTER TABLE CITIZEN ADD TOTAL_SAL AS dbo.TotalSalary(SALARY,EXTRA_FUNDS);

ALTER TABLE CITIZEN ADD AGE AS DATEDIFF(YY,DOB,GETDATE())
ALTER TABLE CORPORATE ADD SINCE_YEARS AS DATEDIFF(YY,REG_DATE,GETDATE())


-- TRIGGER LOG TABLE

CREATE TABLE USER_LOGS(
    USERID VARCHAR(25) NOT NULL,
    ChangeDate DATETIME DEFAULT GETDATE() NOT NULL,
	Command NCHAR(6) NOT NULL,
PASSWD VARCHAR(32) NOT NULL ,
EMAIL VARCHAR(25) NOT NULL,
TAX_PAYER_TYPE VARCHAR(25) NOT NULL
)

CREATE TABLE PAYMENT_LOGS(
    TAX_CODE CHAR(9) NOT NULL,
    ChangeDate DATETIME DEFAULT GETDATE() NOT NULL,
	Command NCHAR(6) NOT NULL,
    PAY_AMT INT NOT NULL,
    PAY_DATE DATE NOT NULL,
    PAY_MODE VARCHAR(20) NOT NULL

)